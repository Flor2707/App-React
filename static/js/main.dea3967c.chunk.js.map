{"version":3,"sources":["mock/MockedItems.jsx","components/item/index.jsx","components/ItemList/index.jsx","components/itemListContainer/index.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["MockedItems","precio","id","title","img","Item","item","src","ItemList","items","map","ItemListContainer","useState","setItems","useEffect","Promise","res","rej","then","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mMAoDeA,EApDK,CACpB,CAAEC,OAAQ,IACRC,GAAI,EACJC,MAAO,kBACPC,IAAK,0BAKP,CAAEH,OAAQ,IACRC,GAAI,EACJC,MAAO,gBACPC,IAAK,6BAEJ,CACDH,OAAQ,IACRC,GAAI,EACJC,MAAO,aACPC,IAAK,iBAEP,CACEH,OAAQ,GACRC,GAAI,EACJC,MAAO,oBACPC,IAAK,6BAEP,CACEH,OAAQ,GACRC,GAAI,EACJC,MAAO,iBACPC,IAAK,uBAEP,CACEH,OAAQ,IACRC,GAAI,EACJC,MAAO,mBACPC,IAAK,2BAEP,CACEH,OAAQ,IACRC,GAAI,EACJC,MAAO,qBACPC,IAAK,8BAEP,CACEH,OAAQ,IACRC,GAAI,EACJC,MAAO,oBACPC,IAAK,6B,OCvCQC,EAPF,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACT,gCACI,qBAAKC,IAAKD,EAAKF,MACf,6BAAKE,EAAKH,QACV,4BAAIG,EAAKL,aCOFO,EAXE,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACf,OACI,mCACCA,EAAMC,KAAI,SAACJ,GACR,OAAO,cAAC,EAAD,CAAoBA,KAAMA,GAAfA,EAAKJ,UCkBpBS,EAfW,WAEtB,MAAyBC,mBAAU,IAAnC,mBAAOH,EAAP,KAAcI,EAAd,KASA,OAPAC,qBAAU,WACY,IAAIC,SAAQ,SAACC,EAAKC,GAChCD,EAAIhB,MAEEkB,MAAK,SAACF,GAAD,OAASH,EAASG,QACnC,CAACP,IAEI,cAAC,EAAD,CAAUA,MAAOA,KCNbU,EATJ,kBAEP,mCAEA,cAAC,EAAD,OCGWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBJ,MAAK,YAAkD,IAA/CK,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.dea3967c.chunk.js","sourcesContent":["const MockedItems = [\r\n{ precio: 500,\r\n  id: 1,\r\n  title: \"Bifera con asas\",\r\n  img: \"/img/biferaconasas.jpg\",\r\n  \r\n\r\n\r\n},\r\n{ precio: 300,\r\n  id: 2,\r\n  title: \"Cacerola 24cm\",\r\n  img: \"/img/cacerolacircular.jpg\",\r\n\r\n}, {\r\n  precio: 100,\r\n  id: 3,\r\n  title: \"Flip terra\",\r\n  img: \"/img/flip.jpg\",\r\n}, \r\n{\r\n  precio: 50,\r\n  id: 4,\r\n  title: \"Caserola Cuadrada\",\r\n  img: \"/img/cacerolacuadrada.jpg\",\r\n},\r\n{\r\n  precio: 10,\r\n  id: 5,\r\n  title: \"SartÃ©n 24cm\",\r\n  img: \"/img/sarten24cm.jpg\",\r\n},\r\n{\r\n  precio: 150,\r\n  id: 6,\r\n  title: \"Set de Budineras\",\r\n  img: \"/img/setdebudineras.png\",\r\n},\r\n{\r\n  precio: 150,\r\n  id: 7,\r\n  title: \"Fuente Rectangular\",\r\n  img: \"/img/fuenterectangular.jpg\",\r\n},\r\n{\r\n  precio: 150,\r\n  id: 8,\r\n  title: \"Set de Utensillos\",\r\n  img: \"/img/setdeutensillos.png\",\r\n}\r\n];\r\n\r\nexport default MockedItems;\r\n\r\n\r\n","//aca va la card\r\n\r\nconst Item = ({ item }) => (\r\n    <div>\r\n        <img src={item.img} />\r\n        <h1>{item.title}</h1>\r\n        <p>{item.precio}</p>\r\n    </div>\r\n);\r\nexport default Item;","//esto va a mapear los productos y devolver un item por cada uno\r\nimport Item from \"../item\";\r\nconst ItemList = ({items}) => {\r\n    return (\r\n        <>\r\n        {items.map((item) => {\r\n            return <Item key={item.id} item={item} />;\r\n            })}\r\n        </>\r\n    );\r\n    \r\n};\r\n\r\nexport default ItemList;\r\n","//llamada a la api, o la promesa \r\n//manejo de estados \r\n//vamos a traer un item list\r\n//ese item list va a mapear item y devolverlos como lista\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport MockedItems from '../../mock/MockedItems'; \r\nimport ItemList from '../ItemList';\r\n\r\nconst ItemListContainer = () => {\r\n    //promesa \r\n    const [items, setItems] =useState ([]);\r\n\r\n    useEffect(() => {\r\n      const itemPromise = new Promise((res, rej) => {\r\n            res(MockedItems);\r\n      });\r\n      itemPromise.then((res) => setItems(res));\r\n    },[items]);\r\n\r\n    return <ItemList items={items} />;\r\n    \r\n};\r\n\r\nexport default ItemListContainer;","\nimport './App.css';\n// import NavBar from './components/NavBar';\nimport ItemListContainer from './components/itemListContainer';\n\nconst App =()=> (\n  \n    <>\n    {/* <NavBar titulo='Escena de cocina'/> */}\n    <ItemListContainer/>\n    </>\n\n);\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}